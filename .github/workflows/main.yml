name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install uv
      uses: astral-sh/setup-uv@v1

    - name: Set up Python
      run: uv python install

    - name: Install the project
      run: uv sync --extra test

    - name: Run Tests
      run: uv run pytest tests --cov-fail-under=90


  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Set up Python
        run: uv python install

      - name: Install project
        run: uv sync --extra build

      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@v8.7.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: release
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Check uv version
        run: uv --version

      - name: Set up Python
        run: uv python install

      - name: Install project
        run: uv sync --extra build

      - name: Build package
        run: uv build

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: uv publish